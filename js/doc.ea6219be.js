(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["doc"],{"129f":function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e===1/t:e!=e&&t!=t}},"1b34":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[e._m(0),n("p",[e._v("统一配置分页配置")]),e._m(1),n("p",[e._v("继承el-pagination的参数和方法 默认配置好单页情况下不显示")]),n("demo-block",[n("div",[n("p",[e._v("data传入fetch、formatListData、 columnInfoList 点击查询翻页等，列表会处理好分页等请求数据的逻辑")])]),n("template",{slot:"source"},[n("element-demo0")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n <article>\n    <nhc-pagination\n    :current-page="form.page + 1"\n    :page-size="form.size"\n    :total="total"\n    @current-change="handleCurrentChange"\n    @size-change="handleSizeChange">\n    </nhc-pagination>\n   </section>\n </article>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      form: {\n        page: 0,\n        size: 20\n      },\n      total: 20,\n    }\n  },\n  methods: {\n    // 每页条数\n    handleSizeChange (val) {\n      this.form.size = val\n      this.form.page = 0\n    },\n    // 页码\n    handleCurrentChange (val) {\n      this.form.page = val - 1\n    }\n  }\n}\n<\/script>\n')])])])],2),e._m(2),n("p",[e._v("参考element-ui el-pagination文档")])],1)},l=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"nhcpagination-fen-ye-qi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nhcpagination-fen-ye-qi"}},[e._v("¶")]),e._v(" NhcPagination 分页器")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"ji-ben-yong-fa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ji-ben-yong-fa"}},[e._v("¶")]),e._v(" 基本用法")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#attributes"}},[e._v("¶")]),e._v(" Attributes")])}],r=n("5530"),o={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("article",[n("nhc-pagination",{attrs:{"current-page":e.form.page+1,"page-size":e.form.size,total:e.total},on:{"current-change":e.handleCurrentChange,"size-change":e.handleSizeChange}})],1)]],2)},t=[],n={data:function(){return{form:{page:0,size:20},total:20}},methods:{handleSizeChange:function(e){this.form.size=e,this.form.page=0},handleCurrentChange:function(e){this.form.page=e-1}}};return Object(r["a"])({render:e,staticRenderFns:t},n)}()}},s=o,c=n("2877"),i=Object(c["a"])(s,a,l,!1,null,null,null);t["default"]=i.exports},3599:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[e._m(0),n("p",[e._v("数据驱动配置查询菜单")]),e._m(1),n("p",[e._v("动态设置每个el-form表单提交组件及数据,多用于常用的列表查询，节省重复编写查询组件")]),n("demo-block",[n("template",{slot:"source"},[n("element-demo0")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <article>\n      <nhc-search ref=\"searchForm\" :search-list=\"searchConfig\" @search=\"handleSearch\" @reset=\"handleResetClick\"></nhc-search>\n  </article>\n</template>\n\n<script>\n\nexport default {\n  name: 'nhcTableDemo',\n  components: {},\n  props: {},\n  data () {\n    return {\n      searchConfig: [\n        {\n          label: '委办局',\n          name: 'deptName',\n          attrs: {\n            filterable: true,\n            placeholder: '请输入关键词进行搜索',\n            clearable: true\n          },\n          options: [\n            { label: '广州', value: 0 },\n            { label: '深圳', value: 1 },\n            { label: '上海', value: 2 },\n            { label: '北京', value: 3 },\n            { label: '广州市天河区棠下', value: 4 }\n          ],\n          component: 'select',\n          value: 0\n        },\n        {\n          label: '负责人',\n          name: 'principal',\n          attrs: {\n            type: 'text',\n            placeholder: ' 请输入关键词进行搜索',\n            clearable: true\n          },\n          component: 'input',\n          value: 'nhc'\n        },\n        {\n          label: '部门名称',\n          name: 'depName',\n          attrs: {\n            type: 'text',\n            placeholder: ' 请输入关键词进行搜索',\n            clearable: true\n          },\n          component: 'input'\n        },\n        {\n          label: '部门编码',\n          name: 'depCode',\n          attrs: {\n            type: 'text',\n            placeholder: ' 请输入关键词进行搜索',\n            clearable: true\n          },\n          component: 'input'\n        },\n        {\n          label: '日期',\n          name: 'createTime',\n          attrs: {\n            align: 'right',\n            type: 'date',\n            placeholder: '请选择日期',\n            clearable: true\n          },\n          component: 'date-picker',\n          value: '2020-04-05'\n        },\n        {\n          label: '格式化日期',\n          name: 'createTime1',\n          attrs: {\n            align: 'right',\n            type: 'date',\n            placeholder: '请选择日期',\n            clearable: true,\n            format: 'yyyy 年 MM 月 dd 日',\n            'value-format': 'yyyy-MM-dd'\n          },\n          component: 'date-picker',\n          value: ''\n        },\n        {\n          label: '快捷键日期',\n          name: 'createTime2',\n          attrs: {\n            align: 'right',\n            type: 'daterange',\n            'range-separator': '至',\n            'start-placeholder': '开始日期',\n            'end-placeholder': '结束日期',\n            clearable: true,\n            format: 'yyyy-MM-dd',\n            'value-format': 'yyyy-MM-dd',\n            'picker-options': this.pickerOptions()\n          },\n          component: 'date-picker',\n          value: ''\n        },\n        {\n          label: '日期范围',\n          name: 'createTimeDaterange',\n          attrs: {\n            align: 'right',\n            type: 'daterange',\n            placeholder: '请选择日期',\n            clearable: true\n          },\n          component: 'date-picker'\n        }\n      ],\n      form: {\n        page: 0,\n        size: 20\n      },\n      total: 20\n    }\n  },\n  methods: {\n    pickerOptions () {\n      return {\n        shortcuts: [{\n          text: '最近一周',\n          onClick (picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近一个月',\n          onClick (picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n            picker.$emit('pick', [start, end])\n          }\n        }, {\n          text: '最近三个月',\n          onClick (picker) {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            picker.$emit('pick', [start, end])\n          }\n        }]\n      }\n    },\n    handleSearch (params) {\n      this.form = Object.assign({}, this.form, params)\n      console.log(this.form)\n    },\n    handleResetClick (params) {\n      this.form = Object.assign({}, this.form, params)\n      console.log(this.form)\n    },\n  },\n}\n<\/script>\n")])])])],2),e._m(2),e._m(3),e._m(4),e._m(5),e._m(6),e._m(7)],1)},l=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"nhcsearch-cha-xun-cai-dan"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nhcsearch-cha-xun-cai-dan"}},[e._v("¶")]),e._v(" NhcSearch 查询菜单")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"ji-ben-yong-fa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ji-ben-yong-fa"}},[e._v("¶")]),e._v(" 基本用法")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#attributes"}},[e._v("¶")]),e._v(" Attributes")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("可选值")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("search-list")]),n("td",[e._v("传入的菜单配置 具体查看下面说明")]),n("td",[e._v("Array")]),n("td",[e._v("—")]),n("td",[e._v("—")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"search-list"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#search-list"}},[e._v("¶")]),e._v(" search-list")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("可选值")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("label")]),n("td",[e._v("表单label")]),n("td",[e._v("string")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("name")]),n("td",[e._v("form表单prop")]),n("td",[e._v("string")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("attrs")]),n("td",[e._v("对应组件的v-bind 参数")]),n("td",[e._v("object")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("component")]),n("td",[e._v("对应element组件(如el-input，则传input)")]),n("td",[e._v("string")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("value")]),n("td",[e._v("组件默认值")]),n("td",[e._v("string")]),n("td",[e._v("number")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("options")]),n("td",[e._v("组件为select时用到")]),n("td",[e._v("object")]),n("td",[e._v("—")]),n("td",[e._v("—")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"events"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("¶")]),e._v(" Events")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("事件名称")]),n("th",[e._v("说明")]),n("th",[e._v("回调参数")])])]),n("tbody",[n("tr",[n("td",[e._v("search")]),n("td",[e._v("查询")]),n("td",[e._v("params")])]),n("tr",[n("td",[e._v("reset")]),n("td",[e._v("重置")]),n("td",[e._v("params")])])])])}],r=n("5530"),o={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("article",[n("nhc-search",{ref:"searchForm",attrs:{"search-list":e.searchConfig},on:{search:e.handleSearch,reset:e.handleResetClick}})],1)]],2)},t=[],n={name:"nhcTableDemo",components:{},props:{},data:function(){return{searchConfig:[{label:"委办局",name:"deptName",attrs:{filterable:!0,placeholder:"请输入关键词进行搜索",clearable:!0},options:[{label:"广州",value:0},{label:"深圳",value:1},{label:"上海",value:2},{label:"北京",value:3},{label:"广州市天河区棠下",value:4}],component:"select",value:0},{label:"负责人",name:"principal",attrs:{type:"text",placeholder:" 请输入关键词进行搜索",clearable:!0},component:"input",value:"nhc"},{label:"部门名称",name:"depName",attrs:{type:"text",placeholder:" 请输入关键词进行搜索",clearable:!0},component:"input"},{label:"部门编码",name:"depCode",attrs:{type:"text",placeholder:" 请输入关键词进行搜索",clearable:!0},component:"input"},{label:"日期",name:"createTime",attrs:{align:"right",type:"date",placeholder:"请选择日期",clearable:!0},component:"date-picker",value:"2020-04-05"},{label:"格式化日期",name:"createTime1",attrs:{align:"right",type:"date",placeholder:"请选择日期",clearable:!0,format:"yyyy 年 MM 月 dd 日","value-format":"yyyy-MM-dd"},component:"date-picker",value:""},{label:"快捷键日期",name:"createTime2",attrs:{align:"right",type:"daterange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",clearable:!0,format:"yyyy-MM-dd","value-format":"yyyy-MM-dd","picker-options":this.pickerOptions()},component:"date-picker",value:""},{label:"日期范围",name:"createTimeDaterange",attrs:{align:"right",type:"daterange",placeholder:"请选择日期",clearable:!0},component:"date-picker"}],form:{page:0,size:20},total:20}},methods:{pickerOptions:function(){return{shortcuts:[{text:"最近一周",onClick:function(e){var t=new Date,n=new Date;n.setTime(n.getTime()-6048e5),e.$emit("pick",[n,t])}},{text:"最近一个月",onClick:function(e){var t=new Date,n=new Date;n.setTime(n.getTime()-2592e6),e.$emit("pick",[n,t])}},{text:"最近三个月",onClick:function(e){var t=new Date,n=new Date;n.setTime(n.getTime()-7776e6),e.$emit("pick",[n,t])}}]}},handleSearch:function(e){this.form=Object.assign({},this.form,e),console.log(this.form)},handleResetClick:function(e){this.form=Object.assign({},this.form,e),console.log(this.form)}}};return Object(r["a"])({render:e,staticRenderFns:t},n)}()}},s=o,c=n("2877"),i=Object(c["a"])(s,a,l,!1,null,null,null);t["default"]=i.exports},4373:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[e._m(0),n("p",[e._v("整合查询/翻页/分页/跳页时自动请求接口表格")]),e._m(1),e._m(2),e._m(3),e._m(4),n("p",[e._v("自动请求接口")]),n("demo-block",[n("div",[n("p",[e._v("data传入fetch、formatListData、 columnInfoList 点击查询翻页等，列表会处理好分页等请求数据的逻辑")])]),n("template",{slot:"source"},[n("element-demo0")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <search-table ref=\"searchTable\" :data=\"data\" @cell-click=\"cellClick\" />\n</template>\n\n<script>\nconst getTestApi = (params) => new Promise(function (resolve, reject) {\n  console.log('接口参数', params)\n  setTimeout(() => {\n    resolve({\n\n      rows: [\n        { name: '张三', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '李四', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '王五', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '赵六', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 }\n      ],\n      total: 100\n    })\n  }, 500)\n})\nexport default {\n  data () {\n    return {\n      data: {\n        fetch: getTestApi,\n        // disableInitGetTable: true, // 初始化不需要请求接口\n        // 系统管理-搜索菜单参数\n        searchMenu: [\n          {\n            label: '名称',\n            keyup: true,\n            name: 'name',\n            value: '测试',\n            attrs: {\n              placeholder: '请输入名称进行搜索',\n              maxlength: 50,\n              showWordLimit: true }\n          },\n          {\n            component: 'select',\n            label: '系统排序',\n            name: 'systemManager',\n            options: [\n              { label: '系统名称升序', value: 'systemNameASC' },\n              { label: '系统名称降序', value: 'systemNameDESC' }\n            ]\n          },\n          {\n            component: 'select',\n            label: '在用状态',\n            name: 'eq_status',\n            options: [\n              { label: '不限', value: '' },\n              { label: '正常', value: '1' },\n              { label: '停用', value: '2' }\n            ]\n          }\n        ],\n        // 系统管理-格式化搜索请求参数\n        formatSearchParams: (params) => {\n          console.log('paramsCallBack', params)\n          const { systemManager, eq_status, name, otherParams } = params || {}\n          return {\n            // page: params.page + 1,\n            name: name || '',\n            systemManager: systemManager || '',\n            eq_status: eq_status || '',\n            otherParams: otherParams || ''\n          }\n        },\n        /**\n         * 系统管理-关联数据源 返回接口数据\n         * @params {object} 请求数据对象\n         * @return {object} {total,list:[]}\n         */\n        formatListData (data) {\n          const { rows, total } = data\n          return { list: rows, total }\n        },\n        // 关联数据源列表 表头 或者 vNode\n        columnInfoList: [\n          <el-table-column\n            type='index'\n            label='序号'\n            width='50'\n          />,\n          {\n            label: '数据库名称',\n            prop: 'name',\n            formatter: (row, column, cellValue, index) => {\n              return cellValue + '增加的文字'\n            }\n            // minWidth: '150'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'特殊处理'}\n            // width='150'\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.dataSourceDialog = true\n                          this.dataSourceId = scope.row.datasourceId\n                        }\n                      }>\n                      ${scope.row.format}\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />,\n          {\n            label: '数据库类型',\n            prop: 'type'\n            // width: '150'\n          },\n          {\n            label: '数据库描述',\n            prop: 'description'\n          }, {\n            label: '创建时间',\n            prop: 'createTime'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'操作'}\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.getData(scope.row)\n                        }\n                      }>\n                      查看详情\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />\n        ]\n      }\n    }\n  },\n  methods: {\n    getData (row) {\n      console.log('getData', row)\n      this.$refs.searchTable.getTable()\n    },\n    resetClick () {\n      this.$refs.searchTable.handleResetClick()\n    },\n    cellClick (row) {\n      console.log('cellClick', row)\n    },\n    search () {\n      this.$refs.searchTable.handleSearchClick({ otherParams: 'otherParams' })\n    }\n  }\n}\n<\/script>\n\n<style lang=\"scss\" scoped>\n.el-aside {\n    width: 400px!important;\n}\n</style>\n\n")])])])],2),e._m(5),n("p",[e._v("可设置指定位置slot")]),n("demo-block",[n("div",[n("p",[e._v("通过 "),n("code",[e._v("v-slot")]),e._v(" 可设置列表顶部和左侧 设置查询按钮左右边（慎用：会影响适应时按钮超出边界）")])]),n("template",{slot:"source"},[n("element-demo1")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <search-table ref=\"searchTable\" :data=\"data\" @cell-click=\"cellClick\">\n    \x3c!-- <template v-slot:searchBtnFont>\n      <el-button>搜索按钮前面</el-button>\n    </template> --\x3e\n\n    <template v-slot:searchBtnEnd>\n      <el-button>搜索按钮后面</el-button>\n    </template>\n\n    <template v-slot:searchBottom>\n      <el-button>搜索底部</el-button>\n    </template>\n\n    <template v-slot:header>\n      \x3c!-- <el-header>Header</el-header> --\x3e\n      <el-aside width=\"260px\" style='background:#EFF7FF;' class='flex'>\n        Aside\n      </el-aside>\n    </template>\n\n    <template v-slot:aside>\n      <el-header style='background:rgb(231, 244, 234);' class='flex'>Header</el-header>\n      \x3c!-- <el-aside width=\"200px\">Aside</el-aside> --\x3e\n    </template>\n\n  </search-table>\n</template>\n\n<script>\nconst getTestApi = (params) => new Promise(function (resolve, reject) {\n  console.log('接口参数', params)\n  setTimeout(() => {\n    resolve({\n      rows: [\n        { name: '张三', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '李四', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '王五', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '赵六', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 }\n      ],\n      total: 100\n    })\n  }, 500)\n})\nexport default {\n  data () {\n    return {\n      otherParams:'otherParams',\n      data: {\n        fetch: getTestApi,\n        // disableInitGetTable: true, // 初始化不需要请求接口\n        // 系统管理-搜索菜单参数\n        searchMenu: [\n                    {\n            label: '资源名称',\n            keyup: true,\n            name: 'tableName',\n            attrs: {\n              placeholder: '请输入资源名称进行搜索',\n              clearable: true\n            }\n          },\n          {\n            label: '资源描述',\n            keyup: true,\n            name: 'tableDesc',\n            attrs: {\n              placeholder: '请输入资源名称进行搜索',\n              clearable: true\n            }\n          },\n          {\n            component: 'select',\n            label: '同步方式',\n            name: 'syncType',\n            options: [\n              { label: '不限', value: '' },\n              { label: '全量同步', value: '0' },\n              { label: '增量同步', value: '1' }\n            ]\n          },\n          {\n            component: 'date-picker',\n            label: '创建时间',\n            name: 'time',\n            attrs: {\n              type: 'datetimerange',\n              rangeSeparator: '~',\n              startPlaceholder: '开始日期',\n              endPlaceholder: '结束日期'\n            }\n          },\n          {\n            component: 'date-picker',\n            label: '更新时间',\n            name: 'upTime',\n            attrs: {\n              type: 'datetimerange',\n              rangeSeparator: '~',\n              startPlaceholder: '开始日期',\n              endPlaceholder: '结束日期'\n            }\n          }\n        ],\n        // 系统管理-格式化搜索请求参数\n        formatSearchParams: (params) => {\n          console.log('paramsCallBack', params)\n          const { tableName, tableDesc, syncType,time, upTime,page } = params || {}\n          return {\n            page: page + 1,\n            tableName: tableName || '',\n            tableDesc: tableDesc || '',\n            syncType: syncType || '',\n            creaTimeStart:time ? time[0] :'',\n            creatTimeStart:time ? time[1] : '',\n            upTimeStart:upTime ? upTime[0] : '',\n            upTimeEnd: upTime ? upTime[1] : '',\n            otherParams: this.otherParams || ''\n          }\n        },\n        /**\n         * 系统管理-关联数据源 返回接口数据\n         * @params {object} 请求数据对象\n         * @return {object} {total,list:[]}\n         */\n        formatListData (data) {\n          const { rows, total } = data\n          return { list: rows, total }\n        },\n        // 关联数据源列表 表头 或者 vNode\n        columnInfoList: [\n          <el-table-column\n            type='index'\n            label='序号'\n            width='50'\n          />,\n          {\n            label: '数据库名称',\n            prop: 'name',\n            formatter: (row, column, cellValue, index) => {\n              return cellValue + '增加的文字'\n            }\n            // minWidth: '150'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'特殊处理'}\n            // width='150'\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.dataSourceDialog = true\n                          this.dataSourceId = scope.row.datasourceId\n                        }\n                      }>\n                      ${scope.row.format}\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />,\n          {\n            label: '数据库类型',\n            prop: 'type'\n            // width: '150'\n          },\n          {\n            label: '数据库描述',\n            prop: 'description'\n          }, {\n            label: '创建时间',\n            prop: 'createTime'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'操作'}\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.delRow(scope.row)\n                        }\n                      }>\n                      删除\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />\n        ]\n      }\n    }\n  },\n  methods: {\n    getData (row) {\n      console.log('getData', row)\n      this.$refs.searchTable.getTable()\n    },\n    resetClick () {\n      this.$refs.searchTable.handleResetClick()\n    },\n    // 删除列表时请求之前所记录的参数和页数\n    delRow(row) {\n      this.$refs.searchTable.getTable()\n    },\n    cellClick (row) {\n      console.log('cellClick', row)\n    },\n    search () {\n      this.$refs.searchTable.handleSearchClick({ otherParams: 'otherParams' })\n    }\n  }\n}\n<\/script>\n\n<style lang=\"scss\" scoped>\n.el-aside {\n    width: 400px!important;\n}\n</style>\n\n")])])])],2),n("demo-block",[n("div",[n("p",[e._v("切换 v-slot:header 里的 el-aside 为 el-header 则会通栏")])]),n("template",{slot:"source"},[n("element-demo2")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <search-table ref=\"searchTable\" :data=\"data\" @cell-click=\"cellClick\">\n    <template v-slot:header>\n       <el-header style='background:#EFF7FF;' class='flex'>Header</el-header>\n    </template>\n\n    <template v-slot:aside>\n     <el-aside width=\"260px\" style='background:rgb(231, 244, 234);' class='flex'>\n        Aside\n      </el-aside>\n    </template>\n\n  </search-table>\n</template>\n\n<script>\nconst getTestApi = (params) => new Promise(function (resolve, reject) {\n  console.log('接口参数', params)\n  setTimeout(() => {\n    resolve({\n      rows: [\n        { name: '张三', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '李四', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '王五', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '赵六', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 }\n      ],\n      total: 100\n    })\n  }, 500)\n})\nexport default {\n  data () {\n    return {\n      data: {\n        fetch: getTestApi,\n        // disableInitGetTable: true, // 初始化不需要请求接口\n        // 系统管理-搜索菜单参数\n        searchMenu: [\n                    {\n            label: '资源名称',\n            keyup: true,\n            name: 'like_tableName',\n            attrs: {\n              placeholder: '请输入资源名称进行搜索',\n              clearable: true\n              // maxlength: 50,\n              // showWordLimit: true\n            }\n          },\n          {\n            label: '资源描述',\n            keyup: true,\n            name: 'like_tableDesc',\n            attrs: {\n              placeholder: '请输入资源名称进行搜索',\n              clearable: true\n            }\n          },\n          {\n            component: 'select',\n            label: '调度周期',\n            name: 'eq_scheduleCycle',\n            options: [\n            ],\n            url: 'dl.database.table.scheduleCycleType'\n          },\n          {\n            component: 'select',\n            label: '同步方式',\n            name: 'eq_syncType',\n            options: [\n              { label: '不限', value: '' },\n              { label: '全量同步', value: '0' },\n              { label: '增量同步', value: '1' }\n            ]\n          },\n          {\n            component: 'date-picker',\n            label: '创建时间',\n            name: 'gt_createTime',\n            attrs: {\n              type: 'datetimerange',\n              rangeSeparator: '~',\n              startPlaceholder: '开始日期',\n              endPlaceholder: '结束日期'\n            }\n          },\n          {\n            component: 'date-picker',\n            label: '更新时间',\n            name: 'gt_syncTime',\n            attrs: {\n              type: 'datetimerange',\n              rangeSeparator: '~',\n              startPlaceholder: '开始日期',\n              endPlaceholder: '结束日期'\n            }\n          }\n        ],\n        // 系统管理-格式化搜索请求参数\n        formatSearchParams: (params) => {\n          console.log('paramsCallBack', params)\n          const { systemManager, eq_status, name, otherParams } = params || {}\n          return {\n            // page: params.page + 1,\n            name: name || '',\n            systemManager: systemManager || '',\n            eq_status: eq_status || '',\n            otherParams: otherParams || ''\n          }\n        },\n        /**\n         * 系统管理-关联数据源 返回接口数据\n         * @params {object} 请求数据对象\n         * @return {object} {total,list:[]}\n         */\n        formatListData (data) {\n          const { rows, total } = data\n          return { list: rows, total }\n        },\n        // 关联数据源列表 表头 或者 vNode\n        columnInfoList: [\n          <el-table-column\n            type='index'\n            label='序号'\n            width='50'\n          />,\n          {\n            label: '数据库名称',\n            prop: 'name',\n            formatter: (row, column, cellValue, index) => {\n              return cellValue + '增加的文字'\n            }\n            // minWidth: '150'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'特殊处理'}\n            // width='150'\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.dataSourceDialog = true\n                          this.dataSourceId = scope.row.datasourceId\n                        }\n                      }>\n                      ${scope.row.format}\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />,\n          {\n            label: '数据库类型',\n            prop: 'type'\n            // width: '150'\n          },\n          {\n            label: '数据库描述',\n            prop: 'description'\n          }, {\n            label: '创建时间',\n            prop: 'createTime'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'操作'}\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.getData(scope.row)\n                        }\n                      }>\n                      查看详情\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />\n        ]\n      }\n    }\n  },\n  methods: {\n    getData (row) {\n      console.log('getData', row)\n      this.$refs.searchTable.getTable()\n    },\n    resetClick () {\n      this.$refs.searchTable.handleResetClick()\n    },\n    cellClick (row) {\n      console.log('cellClick', row)\n    },\n    search () {\n      this.$refs.searchTable.handleSearchClick({ otherParams: 'otherParams' })\n    }\n  }\n}\n<\/script>\n\n<style lang=\"scss\" scoped>\n.el-aside {\n    width: 400px!important;\n}\n</style>\n\n")])])])],2),e._m(6),n("demo-block",[n("div",[n("p",[e._v("通过 "),n("code",[e._v("v-slot:header")])])]),n("template",{slot:"source"},[n("element-demo3")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <search-table ref=\"searchTable\" :data=\"data\" @cell-click=\"cellClick\">\n    <template v-slot:header>\n         <el-header>\n            <el-button @click=\"getData\">getTable 记录当前查询参数</el-button>\n            <el-button @click=\"resetClick\">ResetClick 初始化查询参数（可接受额外参数）</el-button>\n            <el-button @click=\"search\">search: 初始化页数,记录当前查询参数（可接受额外参数）</el-button>\n         </el-header>\n    </template>\n  </search-table>\n</template>\n\n<script>\nconst getTestApi = (params) => new Promise(function (resolve, reject) {\n  console.log('接口参数', params)\n  setTimeout(() => {\n    resolve({\n      rows: [\n        { name: '张三', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '李四', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '王五', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '赵六', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 }\n      ],\n      total: 100\n    })\n  }, 500)\n})\nexport default {\n  data () {\n    return {\n      data: {\n        fetch: getTestApi,\n        // disableInitGetTable: true, // 初始化不需要请求接口\n        // 系统管理-搜索菜单参数\n        searchMenu: [\n          {\n            label: '名称',\n            keyup: true,\n            name: 'name',\n            attrs: {\n              placeholder: '请输入名称进行搜索',\n              maxlength: 50,\n              showWordLimit: true }\n          },\n          {\n            component: 'select',\n            label: '系统排序',\n            name: 'systemManager',\n            options: [\n              { label: '系统名称升序', value: 'systemNameASC' },\n              { label: '系统名称降序', value: 'systemNameDESC' }\n            ]\n          },\n          {\n            component: 'select',\n            label: '在用状态',\n            name: 'eq_status',\n            options: [\n              { label: '不限', value: '' },\n              { label: '正常', value: '1' },\n              { label: '停用', value: '2' }\n            ]\n          }\n        ],\n        // 系统管理-格式化搜索请求参数\n        formatSearchParams: (params) => {\n          console.log('paramsCallBack', params)\n          const { systemManager, eq_status, name, otherParams } = params || {}\n          return {\n            // page: params.page + 1,\n            name: name || '',\n            systemManager: systemManager || '',\n            eq_status: eq_status || '',\n            otherParams: otherParams || ''\n          }\n        },\n        /**\n         * 系统管理-关联数据源 返回接口数据\n         * @params {object} 请求数据对象\n         * @return {object} {total,list:[]}\n         */\n        formatListData (data) {\n          const { rows, total } = data\n          return { list: rows, total }\n        },\n        // 关联数据源列表 表头 或者 vNode\n        columnInfoList: [\n          <el-table-column\n            type='index'\n            label='序号'\n            width='50'\n          />,\n          {\n            label: '数据库名称',\n            prop: 'name',\n            formatter: (row, column, cellValue, index) => {\n              return cellValue + '增加的文字'\n            }\n            // minWidth: '150'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'特殊处理'}\n            // width='150'\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.dataSourceDialog = true\n                          this.dataSourceId = scope.row.datasourceId\n                        }\n                      }>\n                      ${scope.row.format}\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />,\n          {\n            label: '数据库类型',\n            prop: 'type'\n            // width: '150'\n          },\n          {\n            label: '数据库描述',\n            prop: 'description'\n          }, {\n            label: '创建时间',\n            prop: 'createTime'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'操作'}\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.getData(scope.row)\n                        }\n                      }>\n                      查看详情\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />\n        ]\n      }\n    }\n  },\n  methods: {\n    getData (row) {\n      console.log('getData', row)\n      this.$refs.searchTable.getTable()\n    },\n    resetClick () {\n      this.$refs.searchTable.handleResetClick()\n    },\n    cellClick (row) {\n      console.log('cellClick', row)\n    },\n    search () {\n      this.$refs.searchTable.handleSearchClick({ otherParams: 'otherParams' })\n    }\n  }\n}\n<\/script>\n\n<style lang=\"scss\" scoped>\n.el-aside {\n    width: 400px!important;\n}\n</style>\n\n")])])])],2),e._m(7),e._m(8),e._m(9),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14)],1)},l=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"searchtable-zi-dong-cha-xun-biao-ge"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#searchtable-zi-dong-cha-xun-biao-ge"}},[e._v("¶")]),e._v(" SearchTable 自动查询表格")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"she-ji-yuan-ze"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#she-ji-yuan-ze"}},[e._v("¶")]),e._v(" 设计原则")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("减少重复处理查询/翻页/分页/跳页时的逻辑，由searchTable处理,提高开发效率")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",[n("code",[e._v("  // 传入searchTable data\n  data: {\n    // 请求接口\n    fetch: api,\n    //  查询参数\n    searchMenu: [ \n      {\n        label: '名称',\n        keyup: true,\n        name: 'name',\n        attrs: {\n          placeholder: '请输入名称进行搜索',\n          maxlength: 50,\n          showWordLimit: true }\n        },\n    ],\n   /**\n    * 格式化接口返回参数 \n    * return {list,total} list:列表数据 total:分页总数\n    */\n    formatListData (data) {\n      const { rows, total } = data\n      return { list: rows, total }\n    },\n    // 列表展示：接受el-table-column jsx组件 或 el-table-column 列表参数对象\n    columnInfoList: [\n      <el-table-column\n        type='index'\n        label='序号'\n        width='50'\n      />,\n      {\n        label: '数据库名称',\n        prop: 'name',\n        formatter: (row, column, cellValue, index) => {\n          return cellValue + '增加的文字'\n        }\n        minWidth: '150'\n      }\n  }\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"ji-ben-yong-fa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ji-ben-yong-fa"}},[e._v("¶")]),e._v(" 基本用法")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"qu-yu-slot"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qu-yu-slot"}},[e._v("¶")]),e._v(" 区域 slot")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"chang-yong-shi-jian"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chang-yong-shi-jian"}},[e._v("¶")]),e._v(" 常用事件")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#attributes"}},[e._v("¶")]),e._v(" Attributes")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("可选值")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("data")]),n("td",[e._v("传入的数据 具体查看下面说明")]),n("td",[e._v("object")]),n("td",[e._v("—")]),n("td",[e._v("—")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"data"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[e._v("¶")]),e._v(" data")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("可选值")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("fetch")]),n("td",[e._v("列表请求接口")]),n("td",[e._v("promise")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("searchMenu")]),n("td",[e._v("查询菜单 (等同NhcSearch组件searchList参数)")]),n("td",[e._v("Array")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("formatSearchParams")]),n("td",[e._v("格式化返回的请求参数(用于请求接口时真用用到的参数) return object")]),n("td",[e._v("function")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("formatListData")]),n("td",[e._v("格式化接口返回数据 需return { list:（el-table data）, total:(分页器总数) }")]),n("td",[e._v("function")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("columnInfoList")]),n("td",[e._v("table列表设置 el-table-column 参数 或者 el-table-column jsx vnode")]),n("td",[e._v("Array")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("disableInitGetTable")]),n("td",[e._v("是否初始化时不自动请求列表接口")]),n("td",[e._v("Boolean")]),n("td",[e._v("true")]),n("td",[e._v("false")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"slot"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#slot"}},[e._v("¶")]),e._v(" Slot")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Name")]),n("th",[e._v("Description")])])]),n("tbody",[n("tr",[n("td",[e._v("—")]),n("td",[e._v("描述")])]),n("tr",[n("td",[e._v("header")]),n("td",[e._v("列表顶部")])]),n("tr",[n("td",[e._v("aside")]),n("td",[e._v("列表左侧")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"methods"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("¶")]),e._v(" Methods")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("事件名称")]),n("th",[e._v("说明")]),n("th",[e._v("回调参数")])])]),n("tbody",[n("tr",[n("td",[e._v("handleSearchClick")]),n("td",[e._v("查询")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("handleResetClick")]),n("td",[e._v("重置查询")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("getTable")]),n("td",[e._v("查询（会记录之前查询参数）")]),n("td",[e._v("—")])])])])}],r=(n("b0c0"),n("d3b7"),n("ac1f"),n("841c"),n("2638")),o=n.n(r),s=n("5530"),c={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("search-table",{ref:"searchTable",attrs:{data:e.data},on:{"cell-click":e.cellClick}})]],2)},t=[],n=function(e){return new Promise((function(t,n){console.log("接口参数",e),setTimeout((function(){t({rows:[{name:"张三",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"李四",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"王五",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"赵六",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500}],total:100})}),500)}))},a={data:function(){var e=this,t=this.$createElement;return{data:{fetch:n,searchMenu:[{label:"名称",keyup:!0,name:"name",value:"测试",attrs:{placeholder:"请输入名称进行搜索",maxlength:50,showWordLimit:!0}},{component:"select",label:"系统排序",name:"systemManager",options:[{label:"系统名称升序",value:"systemNameASC"},{label:"系统名称降序",value:"systemNameDESC"}]},{component:"select",label:"在用状态",name:"eq_status",options:[{label:"不限",value:""},{label:"正常",value:"1"},{label:"停用",value:"2"}]}],formatSearchParams:function(e){console.log("paramsCallBack",e);var t=e||{},n=t.systemManager,a=t.eq_status,l=t.name,r=t.otherParams;return{name:l||"",systemManager:n||"",eq_status:a||"",otherParams:r||""}},formatListData:function(e){var t=e.rows,n=e.total;return{list:t,total:n}},columnInfoList:[t("el-table-column",{attrs:{type:"index",label:"序号",width:"50"}}),{label:"数据库名称",prop:"name",formatter:function(e,t,n,a){return n+"增加的文字"}},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"特殊处理"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.dataSourceDialog=!0,e.dataSourceId=n.row.datasourceId}}},["$",n.row.format])])}}}])),{label:"数据库类型",prop:"type"},{label:"数据库描述",prop:"description"},{label:"创建时间",prop:"createTime"},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"操作"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.getData(n.row)}}},["查看详情"])])}}}]))]}}},methods:{getData:function(e){console.log("getData",e),this.$refs.searchTable.getTable()},resetClick:function(){this.$refs.searchTable.handleResetClick()},cellClick:function(e){console.log("cellClick",e)},search:function(){this.$refs.searchTable.handleSearchClick({otherParams:"otherParams"})}}};return Object(s["a"])({render:e,staticRenderFns:t},a)}(),"element-demo1":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("search-table",{ref:"searchTable",attrs:{data:e.data},on:{"cell-click":e.cellClick},scopedSlots:e._u([{key:"searchBtnEnd",fn:function(){return[n("el-button",[e._v("搜索按钮后面")])]},proxy:!0},{key:"searchBottom",fn:function(){return[n("el-button",[e._v("搜索底部")])]},proxy:!0},{key:"header",fn:function(){return[n("el-aside",{staticClass:"flex",staticStyle:{background:"#EFF7FF"},attrs:{width:"260px"}},[e._v("\n        Aside\n      ")])]},proxy:!0},{key:"aside",fn:function(){return[n("el-header",{staticClass:"flex",staticStyle:{background:"rgb(231, 244, 234)"}},[e._v("Header")])]},proxy:!0}])})]],2)},t=[],n=function(e){return new Promise((function(t,n){console.log("接口参数",e),setTimeout((function(){t({rows:[{name:"张三",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"李四",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"王五",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"赵六",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500}],total:100})}),500)}))},a={data:function(){var e=this,t=this.$createElement;return{otherParams:"otherParams",data:{fetch:n,searchMenu:[{label:"资源名称",keyup:!0,name:"tableName",attrs:{placeholder:"请输入资源名称进行搜索",clearable:!0}},{label:"资源描述",keyup:!0,name:"tableDesc",attrs:{placeholder:"请输入资源名称进行搜索",clearable:!0}},{component:"select",label:"同步方式",name:"syncType",options:[{label:"不限",value:""},{label:"全量同步",value:"0"},{label:"增量同步",value:"1"}]},{component:"date-picker",label:"创建时间",name:"time",attrs:{type:"datetimerange",rangeSeparator:"~",startPlaceholder:"开始日期",endPlaceholder:"结束日期"}},{component:"date-picker",label:"更新时间",name:"upTime",attrs:{type:"datetimerange",rangeSeparator:"~",startPlaceholder:"开始日期",endPlaceholder:"结束日期"}}],formatSearchParams:function(t){console.log("paramsCallBack",t);var n=t||{},a=n.tableName,l=n.tableDesc,r=n.syncType,o=n.time,s=n.upTime,c=n.page;return{page:c+1,tableName:a||"",tableDesc:l||"",syncType:r||"",creaTimeStart:o?o[0]:"",creatTimeStart:o?o[1]:"",upTimeStart:s?s[0]:"",upTimeEnd:s?s[1]:"",otherParams:e.otherParams||""}},formatListData:function(e){var t=e.rows,n=e.total;return{list:t,total:n}},columnInfoList:[t("el-table-column",{attrs:{type:"index",label:"序号",width:"50"}}),{label:"数据库名称",prop:"name",formatter:function(e,t,n,a){return n+"增加的文字"}},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"特殊处理"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.dataSourceDialog=!0,e.dataSourceId=n.row.datasourceId}}},["$",n.row.format])])}}}])),{label:"数据库类型",prop:"type"},{label:"数据库描述",prop:"description"},{label:"创建时间",prop:"createTime"},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"操作"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.delRow(n.row)}}},["删除"])])}}}]))]}}},methods:{getData:function(e){console.log("getData",e),this.$refs.searchTable.getTable()},resetClick:function(){this.$refs.searchTable.handleResetClick()},delRow:function(e){this.$refs.searchTable.getTable()},cellClick:function(e){console.log("cellClick",e)},search:function(){this.$refs.searchTable.handleSearchClick({otherParams:"otherParams"})}}};return Object(s["a"])({render:e,staticRenderFns:t},a)}(),"element-demo2":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("search-table",{ref:"searchTable",attrs:{data:e.data},on:{"cell-click":e.cellClick},scopedSlots:e._u([{key:"header",fn:function(){return[n("el-header",{staticClass:"flex",staticStyle:{background:"#EFF7FF"}},[e._v("Header")])]},proxy:!0},{key:"aside",fn:function(){return[n("el-aside",{staticClass:"flex",staticStyle:{background:"rgb(231, 244, 234)"},attrs:{width:"260px"}},[e._v("\n        Aside\n      ")])]},proxy:!0}])})]],2)},t=[],n=function(e){return new Promise((function(t,n){console.log("接口参数",e),setTimeout((function(){t({rows:[{name:"张三",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"李四",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"王五",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"赵六",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500}],total:100})}),500)}))},a={data:function(){var e=this,t=this.$createElement;return{data:{fetch:n,searchMenu:[{label:"资源名称",keyup:!0,name:"like_tableName",attrs:{placeholder:"请输入资源名称进行搜索",clearable:!0}},{label:"资源描述",keyup:!0,name:"like_tableDesc",attrs:{placeholder:"请输入资源名称进行搜索",clearable:!0}},{component:"select",label:"调度周期",name:"eq_scheduleCycle",options:[],url:"dl.database.table.scheduleCycleType"},{component:"select",label:"同步方式",name:"eq_syncType",options:[{label:"不限",value:""},{label:"全量同步",value:"0"},{label:"增量同步",value:"1"}]},{component:"date-picker",label:"创建时间",name:"gt_createTime",attrs:{type:"datetimerange",rangeSeparator:"~",startPlaceholder:"开始日期",endPlaceholder:"结束日期"}},{component:"date-picker",label:"更新时间",name:"gt_syncTime",attrs:{type:"datetimerange",rangeSeparator:"~",startPlaceholder:"开始日期",endPlaceholder:"结束日期"}}],formatSearchParams:function(e){console.log("paramsCallBack",e);var t=e||{},n=t.systemManager,a=t.eq_status,l=t.name,r=t.otherParams;return{name:l||"",systemManager:n||"",eq_status:a||"",otherParams:r||""}},formatListData:function(e){var t=e.rows,n=e.total;return{list:t,total:n}},columnInfoList:[t("el-table-column",{attrs:{type:"index",label:"序号",width:"50"}}),{label:"数据库名称",prop:"name",formatter:function(e,t,n,a){return n+"增加的文字"}},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"特殊处理"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.dataSourceDialog=!0,e.dataSourceId=n.row.datasourceId}}},["$",n.row.format])])}}}])),{label:"数据库类型",prop:"type"},{label:"数据库描述",prop:"description"},{label:"创建时间",prop:"createTime"},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"操作"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.getData(n.row)}}},["查看详情"])])}}}]))]}}},methods:{getData:function(e){console.log("getData",e),this.$refs.searchTable.getTable()},resetClick:function(){this.$refs.searchTable.handleResetClick()},cellClick:function(e){console.log("cellClick",e)},search:function(){this.$refs.searchTable.handleSearchClick({otherParams:"otherParams"})}}};return Object(s["a"])({render:e,staticRenderFns:t},a)}(),"element-demo3":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("search-table",{ref:"searchTable",attrs:{data:e.data},on:{"cell-click":e.cellClick},scopedSlots:e._u([{key:"header",fn:function(){return[n("el-header",[n("el-button",{on:{click:e.getData}},[e._v("getTable 记录当前查询参数")]),e._v(" "),n("el-button",{on:{click:e.resetClick}},[e._v("ResetClick 初始化查询参数（可接受额外参数）")]),e._v(" "),n("el-button",{on:{click:e.search}},[e._v("search: 初始化页数,记录当前查询参数（可接受额外参数）")])],1)]},proxy:!0}])})]],2)},t=[],n=function(e){return new Promise((function(t,n){console.log("接口参数",e),setTimeout((function(){t({rows:[{name:"张三",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"李四",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"王五",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"赵六",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500}],total:100})}),500)}))},a={data:function(){var e=this,t=this.$createElement;return{data:{fetch:n,searchMenu:[{label:"名称",keyup:!0,name:"name",attrs:{placeholder:"请输入名称进行搜索",maxlength:50,showWordLimit:!0}},{component:"select",label:"系统排序",name:"systemManager",options:[{label:"系统名称升序",value:"systemNameASC"},{label:"系统名称降序",value:"systemNameDESC"}]},{component:"select",label:"在用状态",name:"eq_status",options:[{label:"不限",value:""},{label:"正常",value:"1"},{label:"停用",value:"2"}]}],formatSearchParams:function(e){console.log("paramsCallBack",e);var t=e||{},n=t.systemManager,a=t.eq_status,l=t.name,r=t.otherParams;return{name:l||"",systemManager:n||"",eq_status:a||"",otherParams:r||""}},formatListData:function(e){var t=e.rows,n=e.total;return{list:t,total:n}},columnInfoList:[t("el-table-column",{attrs:{type:"index",label:"序号",width:"50"}}),{label:"数据库名称",prop:"name",formatter:function(e,t,n,a){return n+"增加的文字"}},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"特殊处理"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.dataSourceDialog=!0,e.dataSourceId=n.row.datasourceId}}},["$",n.row.format])])}}}])),{label:"数据库类型",prop:"type"},{label:"数据库描述",prop:"description"},{label:"创建时间",prop:"createTime"},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"操作"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.getData(n.row)}}},["查看详情"])])}}}]))]}}},methods:{getData:function(e){console.log("getData",e),this.$refs.searchTable.getTable()},resetClick:function(){this.$refs.searchTable.handleResetClick()},cellClick:function(e){console.log("cellClick",e)},search:function(){this.$refs.searchTable.handleSearchClick({otherParams:"otherParams"})}}};return Object(s["a"])({render:e,staticRenderFns:t},a)}()}},i=c,m=n("2877"),d=Object(m["a"])(i,a,l,!1,null,null,null);t["default"]=d.exports},"5ee5":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[e._m(0),n("p",[e._v("整合翻页/分页/跳页时自动请求接口表格")]),e._m(1),e._m(2),e._m(3),e._m(4),n("p",[e._v("自动请求接口")]),n("demo-block",[n("div",[n("p",[e._v("data传入fetch、formatListData、 columnInfoList 点击查询翻页等，列表会处理好分页等请求数据的逻辑")])]),n("template",{slot:"source"},[n("element-demo0")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <auto-table ref=\"autoTable\" :data=\"data\" @cell-click=\"cellClick\" />\n</template>\n\n<script>\nconst getTestApi = (params) => new Promise(function (resolve, reject) {\n  console.log('接口参数', params)\n  setTimeout(() => {\n    resolve({\n      rows: [\n        { name: '张三', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '李四', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '王五', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '赵六', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 }\n      ],\n      total: 100\n    })\n  }, 500)\n})\nexport default {\n  data () {\n    return {\n      data: {\n        fetch: getTestApi,\n        // 搜索请求参数\n        formatSearchParams: (params) => {\n          console.log('paramsCallBack', params)\n          const { systemManager, eq_status, name, otherParams } = params || {}\n          return {\n            name: name || '',\n            systemManager: systemManager || '',\n            eq_status: eq_status || '',\n            otherParams: otherParams || ''\n          }\n        },\n        /**\n         * 返回接口数据\n         * @params {object} 请求数据对象\n         * @return {object} {total,list:[]}\n         */\n        formatListData (data) {\n          const { rows, total } = data\n          return { list: rows, total }\n        },\n        // 关联数据源列表 表头 或者 vNode\n        columnInfoList: [\n          <el-table-column\n            type='index'\n            label='序号'\n            width='50'\n          />,\n          {\n            label: '数据库名称',\n            prop: 'name',\n            formatter: (row, column, cellValue, index) => {\n              return cellValue + '增加的文字'\n            }\n            // minWidth: '150'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'特殊处理'}\n            // width='150'\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.dataSourceDialog = true\n                          this.dataSourceId = scope.row.datasourceId\n                        }\n                      }>\n                      ${scope.row.format}\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />,\n          {\n            label: '数据库类型',\n            prop: 'type'\n            // width: '150'\n          },\n          {\n            label: '数据库描述',\n            prop: 'description'\n          }, {\n            label: '创建时间',\n            prop: 'createTime'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'操作'}\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.getData(scope.row)\n                        }\n                      }>\n                      查看详情\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />\n        ]\n      }\n    }\n  },\n  methods: {\n    getData (row) {\n      console.log('getData', row)\n      this.$refs.searchTable.getTable()\n    },\n    resetClick () {\n      this.$refs.searchTable.handleResetClick()\n    },\n    cellClick (row) {\n      console.log('cellClick', row)\n    },\n    search () {\n      this.$refs.searchTable.handleSearchClick({ otherParams: 'otherParams' })\n    }\n  }\n}\n<\/script>\n\n<style lang=\"scss\" scoped>\n.el-aside {\n    width: 400px!important;\n}\n</style>\n\n")])])])],2),e._m(5),n("p",[e._v("可设置指定位置slot")]),n("demo-block",[n("div",[n("p",[e._v("通过 "),n("code",[e._v("v-slot")]),e._v(" 可设置列表顶部和左侧 设置查询按钮左右边（慎用：会影响适应时按钮超出边界）")])]),n("template",{slot:"source"},[n("element-demo1")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <search-table ref=\"searchTable\" :data=\"data\" @cell-click=\"cellClick\">\n    \x3c!-- <template v-slot:searchBtnFont>\n      <el-button>搜索按钮前面</el-button>\n    </template> --\x3e\n\n    <template v-slot:searchBtnEnd>\n      <el-button>搜索按钮后面</el-button>\n    </template>\n\n    <template v-slot:searchBottom>\n      <el-button>搜索底部</el-button>\n    </template>\n\n    <template v-slot:header>\n      \x3c!-- <el-header>Header</el-header> --\x3e\n      <el-aside width=\"260px\" style='background:#EFF7FF;' class='flex'>\n        Aside\n      </el-aside>\n    </template>\n\n    <template v-slot:aside>\n      <el-header style='background:rgb(231, 244, 234);' class='flex'>Header</el-header>\n      \x3c!-- <el-aside width=\"200px\">Aside</el-aside> --\x3e\n    </template>\n\n  </search-table>\n</template>\n\n<script>\nconst getTestApi = (params) => new Promise(function (resolve, reject) {\n  console.log('接口参数', params)\n  setTimeout(() => {\n    resolve({\n      rows: [\n        { name: '张三', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '李四', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '王五', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '赵六', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 }\n      ],\n      total: 100\n    })\n  }, 500)\n})\nexport default {\n  data () {\n    return {\n      data: {\n        fetch: getTestApi,\n        // disableInitGetTable: true, // 初始化不需要请求接口\n        // 系统管理-搜索菜单参数\n        searchMenu: [\n                    {\n            label: '资源名称',\n            keyup: true,\n            name: 'like_tableName',\n            attrs: {\n              placeholder: '请输入资源名称进行搜索',\n              clearable: true\n            }\n          },\n          {\n            label: '资源描述',\n            keyup: true,\n            name: 'like_tableDesc',\n            attrs: {\n              placeholder: '请输入资源名称进行搜索',\n              clearable: true\n            }\n          },\n          {\n            component: 'select',\n            label: '同步方式',\n            name: 'eq_syncType',\n            options: [\n              { label: '不限', value: '' },\n              { label: '全量同步', value: '0' },\n              { label: '增量同步', value: '1' }\n            ]\n          },\n          {\n            component: 'date-picker',\n            label: '创建时间',\n            name: 'gt_createTime',\n            attrs: {\n              type: 'datetimerange',\n              rangeSeparator: '~',\n              startPlaceholder: '开始日期',\n              endPlaceholder: '结束日期'\n            }\n          },\n          {\n            component: 'date-picker',\n            label: '更新时间',\n            name: 'gt_syncTime',\n            attrs: {\n              type: 'datetimerange',\n              rangeSeparator: '~',\n              startPlaceholder: '开始日期',\n              endPlaceholder: '结束日期'\n            }\n          }\n        ],\n        // 系统管理-格式化搜索请求参数\n        formatSearchParams: (params) => {\n          console.log('paramsCallBack', params)\n          const { systemManager, eq_status, name, otherParams } = params || {}\n          return {\n            // page: params.page + 1,\n            name: name || '',\n            systemManager: systemManager || '',\n            eq_status: eq_status || '',\n            otherParams: otherParams || ''\n          }\n        },\n        /**\n         * 系统管理-关联数据源 返回接口数据\n         * @params {object} 请求数据对象\n         * @return {object} {total,list:[]}\n         */\n        formatListData (data) {\n          const { rows, total } = data\n          return { list: rows, total }\n        },\n        // 关联数据源列表 表头 或者 vNode\n        columnInfoList: [\n          <el-table-column\n            type='index'\n            label='序号'\n            width='50'\n          />,\n          {\n            label: '数据库名称',\n            prop: 'name',\n            formatter: (row, column, cellValue, index) => {\n              return cellValue + '增加的文字'\n            }\n            // minWidth: '150'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'特殊处理'}\n            // width='150'\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.dataSourceDialog = true\n                          this.dataSourceId = scope.row.datasourceId\n                        }\n                      }>\n                      ${scope.row.format}\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />,\n          {\n            label: '数据库类型',\n            prop: 'type'\n            // width: '150'\n          },\n          {\n            label: '数据库描述',\n            prop: 'description'\n          }, {\n            label: '创建时间',\n            prop: 'createTime'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'操作'}\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.getData(scope.row)\n                        }\n                      }>\n                      查看详情\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />\n        ]\n      }\n    }\n  },\n  methods: {\n    getData (row) {\n      console.log('getData', row)\n      this.$refs.searchTable.getTable()\n    },\n    resetClick () {\n      this.$refs.searchTable.handleResetClick()\n    },\n    cellClick (row) {\n      console.log('cellClick', row)\n    },\n    search () {\n      this.$refs.searchTable.handleSearchClick({ otherParams: 'otherParams' })\n    }\n  }\n}\n<\/script>\n\n<style lang=\"scss\" scoped>\n.el-aside {\n    width: 400px!important;\n}\n</style>\n\n")])])])],2),n("demo-block",[n("div",[n("p",[e._v("切换 v-slot:header 里的 el-aside 为 el-header 则会通栏")])]),n("template",{slot:"source"},[n("element-demo2")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <search-table ref=\"searchTable\" :data=\"data\" @cell-click=\"cellClick\">\n    <template v-slot:header>\n       <el-header style='background:#EFF7FF;' class='flex'>Header</el-header>\n    </template>\n\n    <template v-slot:aside>\n     <el-aside width=\"260px\" style='background:rgb(231, 244, 234);' class='flex'>\n        Aside\n      </el-aside>\n    </template>\n\n  </search-table>\n</template>\n\n<script>\nconst getTestApi = (params) => new Promise(function (resolve, reject) {\n  console.log('接口参数', params)\n  setTimeout(() => {\n    resolve({\n      rows: [\n        { name: '张三', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '李四', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '王五', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '赵六', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 }\n      ],\n      total: 100\n    })\n  }, 500)\n})\nexport default {\n  data () {\n    return {\n      data: {\n        fetch: getTestApi,\n        // disableInitGetTable: true, // 初始化不需要请求接口\n        // 系统管理-搜索菜单参数\n        searchMenu: [\n                    {\n            label: '资源名称',\n            keyup: true,\n            name: 'like_tableName',\n            attrs: {\n              placeholder: '请输入资源名称进行搜索',\n              clearable: true\n              // maxlength: 50,\n              // showWordLimit: true\n            }\n          },\n          {\n            label: '资源描述',\n            keyup: true,\n            name: 'like_tableDesc',\n            attrs: {\n              placeholder: '请输入资源名称进行搜索',\n              clearable: true\n            }\n          },\n          {\n            component: 'select',\n            label: '调度周期',\n            name: 'eq_scheduleCycle',\n            options: [\n            ],\n            url: 'dl.database.table.scheduleCycleType'\n          },\n          {\n            component: 'select',\n            label: '同步方式',\n            name: 'eq_syncType',\n            options: [\n              { label: '不限', value: '' },\n              { label: '全量同步', value: '0' },\n              { label: '增量同步', value: '1' }\n            ]\n          },\n          {\n            component: 'date-picker',\n            label: '创建时间',\n            name: 'gt_createTime',\n            attrs: {\n              type: 'datetimerange',\n              rangeSeparator: '~',\n              startPlaceholder: '开始日期',\n              endPlaceholder: '结束日期'\n            }\n          },\n          {\n            component: 'date-picker',\n            label: '更新时间',\n            name: 'gt_syncTime',\n            attrs: {\n              type: 'datetimerange',\n              rangeSeparator: '~',\n              startPlaceholder: '开始日期',\n              endPlaceholder: '结束日期'\n            }\n          }\n        ],\n        // 系统管理-格式化搜索请求参数\n        formatSearchParams: (params) => {\n          console.log('paramsCallBack', params)\n          const { systemManager, eq_status, name, otherParams } = params || {}\n          return {\n            // page: params.page + 1,\n            name: name || '',\n            systemManager: systemManager || '',\n            eq_status: eq_status || '',\n            otherParams: otherParams || ''\n          }\n        },\n        /**\n         * 系统管理-关联数据源 返回接口数据\n         * @params {object} 请求数据对象\n         * @return {object} {total,list:[]}\n         */\n        formatListData (data) {\n          const { rows, total } = data\n          return { list: rows, total }\n        },\n        // 关联数据源列表 表头 或者 vNode\n        columnInfoList: [\n          <el-table-column\n            type='index'\n            label='序号'\n            width='50'\n          />,\n          {\n            label: '数据库名称',\n            prop: 'name',\n            formatter: (row, column, cellValue, index) => {\n              return cellValue + '增加的文字'\n            }\n            // minWidth: '150'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'特殊处理'}\n            // width='150'\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.dataSourceDialog = true\n                          this.dataSourceId = scope.row.datasourceId\n                        }\n                      }>\n                      ${scope.row.format}\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />,\n          {\n            label: '数据库类型',\n            prop: 'type'\n            // width: '150'\n          },\n          {\n            label: '数据库描述',\n            prop: 'description'\n          }, {\n            label: '创建时间',\n            prop: 'createTime'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'操作'}\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.getData(scope.row)\n                        }\n                      }>\n                      查看详情\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />\n        ]\n      }\n    }\n  },\n  methods: {\n    getData (row) {\n      console.log('getData', row)\n      this.$refs.searchTable.getTable()\n    },\n    resetClick () {\n      this.$refs.searchTable.handleResetClick()\n    },\n    cellClick (row) {\n      console.log('cellClick', row)\n    },\n    search () {\n      this.$refs.searchTable.handleSearchClick({ otherParams: 'otherParams' })\n    }\n  }\n}\n<\/script>\n\n<style lang=\"scss\" scoped>\n.el-aside {\n    width: 400px!important;\n}\n</style>\n\n")])])])],2),e._m(6),n("demo-block",[n("div",[n("p",[e._v("通过 "),n("code",[e._v("v-slot:header")])])]),n("template",{slot:"source"},[n("element-demo3")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v("<template>\n  <search-table ref=\"searchTable\" :data=\"data\" @cell-click=\"cellClick\">\n    <template v-slot:header>\n         <el-header>\n            <el-button @click=\"getData\">getTable 记录当前查询参数</el-button>\n            <el-button @click=\"resetClick\">ResetClick 初始化查询参数（可接受额外参数）</el-button>\n            <el-button @click=\"search\">search: 初始化页数,记录当前查询参数（可接受额外参数）</el-button>\n         </el-header>\n    </template>\n  </search-table>\n</template>\n\n<script>\nconst getTestApi = (params) => new Promise(function (resolve, reject) {\n  console.log('接口参数', params)\n  setTimeout(() => {\n    resolve({\n      rows: [\n        { name: '张三', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '李四', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '王五', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 },\n        { name: '赵六', type: 'mongodb', description: '中国广东', createTime: '2018-10-10', format: 500 }\n      ],\n      total: 100\n    })\n  }, 500)\n})\nexport default {\n  data () {\n    return {\n      data: {\n        fetch: getTestApi,\n        // disableInitGetTable: true, // 初始化不需要请求接口\n        // 系统管理-搜索菜单参数\n        searchMenu: [\n          {\n            label: '名称',\n            keyup: true,\n            name: 'name',\n            attrs: {\n              placeholder: '请输入名称进行搜索',\n              maxlength: 50,\n              showWordLimit: true }\n          },\n          {\n            component: 'select',\n            label: '系统排序',\n            name: 'systemManager',\n            options: [\n              { label: '系统名称升序', value: 'systemNameASC' },\n              { label: '系统名称降序', value: 'systemNameDESC' }\n            ]\n          },\n          {\n            component: 'select',\n            label: '在用状态',\n            name: 'eq_status',\n            options: [\n              { label: '不限', value: '' },\n              { label: '正常', value: '1' },\n              { label: '停用', value: '2' }\n            ]\n          }\n        ],\n        // 系统管理-格式化搜索请求参数\n        formatSearchParams: (params) => {\n          console.log('paramsCallBack', params)\n          const { systemManager, eq_status, name, otherParams } = params || {}\n          return {\n            // page: params.page + 1,\n            name: name || '',\n            systemManager: systemManager || '',\n            eq_status: eq_status || '',\n            otherParams: otherParams || ''\n          }\n        },\n        /**\n         * 系统管理-关联数据源 返回接口数据\n         * @params {object} 请求数据对象\n         * @return {object} {total,list:[]}\n         */\n        formatListData (data) {\n          const { rows, total } = data\n          return { list: rows, total }\n        },\n        // 关联数据源列表 表头 或者 vNode\n        columnInfoList: [\n          <el-table-column\n            type='index'\n            label='序号'\n            width='50'\n          />,\n          {\n            label: '数据库名称',\n            prop: 'name',\n            formatter: (row, column, cellValue, index) => {\n              return cellValue + '增加的文字'\n            }\n            // minWidth: '150'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'特殊处理'}\n            // width='150'\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.dataSourceDialog = true\n                          this.dataSourceId = scope.row.datasourceId\n                        }\n                      }>\n                      ${scope.row.format}\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />,\n          {\n            label: '数据库类型',\n            prop: 'type'\n            // width: '150'\n          },\n          {\n            label: '数据库描述',\n            prop: 'description'\n          }, {\n            label: '创建时间',\n            prop: 'createTime'\n          },\n          <el-table-column\n            style='text-align: center;'\n            label={'操作'}\n            {...{\n              scopedSlots: {\n                default: (scope) => {\n                  return (<div>\n                    <el-button\n                      type={'text'}\n                      size={'small'}\n                      nativeOnClick={\n                        () => {\n                          this.getData(scope.row)\n                        }\n                      }>\n                      查看详情\n                    </el-button>\n                  </div>)\n                }\n              }\n            }}\n          />\n        ]\n      }\n    }\n  },\n  methods: {\n    getData (row) {\n      console.log('getData', row)\n      this.$refs.searchTable.getTable()\n    },\n    resetClick () {\n      this.$refs.searchTable.handleResetClick()\n    },\n    cellClick (row) {\n      console.log('cellClick', row)\n    },\n    search () {\n      this.$refs.searchTable.handleSearchClick({ otherParams: 'otherParams' })\n    }\n  }\n}\n<\/script>\n\n<style lang=\"scss\" scoped>\n.el-aside {\n    width: 400px!important;\n}\n</style>\n\n")])])])],2),e._m(7),e._m(8),e._m(9),e._m(10),e._m(11),e._m(12),e._m(13),e._m(14)],1)},l=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"autotable-zi-dong-fen-ye-biao-ge"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#autotable-zi-dong-fen-ye-biao-ge"}},[e._v("¶")]),e._v(" AutoTable 自动分页表格")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"she-ji-yuan-ze"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#she-ji-yuan-ze"}},[e._v("¶")]),e._v(" 设计原则")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("减少重复处理翻页/分页/跳页时的逻辑，由AutoTable处理,提高开发效率")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",[n("code",[e._v("  // 传入AutoTable data\n  data: {\n    // 请求接口\n    fetch: api,\n    /**\n      * 格式化接口返回参数 \n      * return {list,total} list:列表数据 total:分页总数\n      */\n    formatListData (data) {\n      const { rows, total } = data\n      return { list: rows, total }\n    },\n    // 列表展示：接受el-table-column jsx组件 或 el-table-column 列表参数对象\n    columnInfoList: [\n      <el-table-column\n        type='index'\n        label='序号'\n        width='50'\n      />,\n      {\n        label: '数据库名称',\n        prop: 'name',\n        formatter: (row, column, cellValue, index) => {\n          return cellValue + '增加的文字'\n        }\n        minWidth: '150'\n      }\n  }\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"ji-ben-yong-fa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ji-ben-yong-fa"}},[e._v("¶")]),e._v(" 基本用法")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"qu-yu-slot"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qu-yu-slot"}},[e._v("¶")]),e._v(" 区域 slot")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"chang-yong-shi-jian"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chang-yong-shi-jian"}},[e._v("¶")]),e._v(" 常用事件")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#attributes"}},[e._v("¶")]),e._v(" Attributes")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("可选值")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("data")]),n("td",[e._v("传入的数据 具体查看下面说明")]),n("td",[e._v("object")]),n("td",[e._v("—")]),n("td",[e._v("—")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"data"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[e._v("¶")]),e._v(" data")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("可选值")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("fetch")]),n("td",[e._v("列表请求接口")]),n("td",[e._v("promise")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("searchMenu")]),n("td",[e._v("查询菜单 (等同NhcSearch组件searchList参数)")]),n("td",[e._v("Array")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("formatSearchParams")]),n("td",[e._v("格式化返回的请求参数(用于请求接口时真用用到的参数) return object")]),n("td",[e._v("function")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("formatListData")]),n("td",[e._v("格式化接口返回数据 需return { list:（el-table data）, total:(分页器总数) }")]),n("td",[e._v("function")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("columnInfoList")]),n("td",[e._v("table列表设置 el-table-column 参数 或者 el-table-column jsx vnode")]),n("td",[e._v("Array")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("disableInitGetTable")]),n("td",[e._v("是否初始化时不自动请求列表接口")]),n("td",[e._v("Boolean")]),n("td",[e._v("true")]),n("td",[e._v("false")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"slot"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#slot"}},[e._v("¶")]),e._v(" Slot")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Name")]),n("th",[e._v("Description")])])]),n("tbody",[n("tr",[n("td",[e._v("—")]),n("td",[e._v("描述")])]),n("tr",[n("td",[e._v("header")]),n("td",[e._v("列表顶部")])]),n("tr",[n("td",[e._v("aside")]),n("td",[e._v("列表左侧")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"methods"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("¶")]),e._v(" Methods")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("事件名称")]),n("th",[e._v("说明")]),n("th",[e._v("回调参数")])])]),n("tbody",[n("tr",[n("td",[e._v("getTable")]),n("td",[e._v("查询（会记录之前查询参数）")]),n("td",[e._v("—")])])])])}],r=(n("b0c0"),n("d3b7"),n("ac1f"),n("841c"),n("2638")),o=n.n(r),s=n("5530"),c={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("auto-table",{ref:"autoTable",attrs:{data:e.data},on:{"cell-click":e.cellClick}})]],2)},t=[],n=function(e){return new Promise((function(t,n){console.log("接口参数",e),setTimeout((function(){t({rows:[{name:"张三",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"李四",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"王五",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"赵六",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500}],total:100})}),500)}))},a={data:function(){var e=this,t=this.$createElement;return{data:{fetch:n,formatSearchParams:function(e){console.log("paramsCallBack",e);var t=e||{},n=t.systemManager,a=t.eq_status,l=t.name,r=t.otherParams;return{name:l||"",systemManager:n||"",eq_status:a||"",otherParams:r||""}},formatListData:function(e){var t=e.rows,n=e.total;return{list:t,total:n}},columnInfoList:[t("el-table-column",{attrs:{type:"index",label:"序号",width:"50"}}),{label:"数据库名称",prop:"name",formatter:function(e,t,n,a){return n+"增加的文字"}},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"特殊处理"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.dataSourceDialog=!0,e.dataSourceId=n.row.datasourceId}}},["$",n.row.format])])}}}])),{label:"数据库类型",prop:"type"},{label:"数据库描述",prop:"description"},{label:"创建时间",prop:"createTime"},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"操作"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.getData(n.row)}}},["查看详情"])])}}}]))]}}},methods:{getData:function(e){console.log("getData",e),this.$refs.searchTable.getTable()},resetClick:function(){this.$refs.searchTable.handleResetClick()},cellClick:function(e){console.log("cellClick",e)},search:function(){this.$refs.searchTable.handleSearchClick({otherParams:"otherParams"})}}};return Object(s["a"])({render:e,staticRenderFns:t},a)}(),"element-demo1":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("search-table",{ref:"searchTable",attrs:{data:e.data},on:{"cell-click":e.cellClick},scopedSlots:e._u([{key:"searchBtnEnd",fn:function(){return[n("el-button",[e._v("搜索按钮后面")])]},proxy:!0},{key:"searchBottom",fn:function(){return[n("el-button",[e._v("搜索底部")])]},proxy:!0},{key:"header",fn:function(){return[n("el-aside",{staticClass:"flex",staticStyle:{background:"#EFF7FF"},attrs:{width:"260px"}},[e._v("\n        Aside\n      ")])]},proxy:!0},{key:"aside",fn:function(){return[n("el-header",{staticClass:"flex",staticStyle:{background:"rgb(231, 244, 234)"}},[e._v("Header")])]},proxy:!0}])})]],2)},t=[],n=function(e){return new Promise((function(t,n){console.log("接口参数",e),setTimeout((function(){t({rows:[{name:"张三",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"李四",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"王五",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"赵六",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500}],total:100})}),500)}))},a={data:function(){var e=this,t=this.$createElement;return{data:{fetch:n,searchMenu:[{label:"资源名称",keyup:!0,name:"like_tableName",attrs:{placeholder:"请输入资源名称进行搜索",clearable:!0}},{label:"资源描述",keyup:!0,name:"like_tableDesc",attrs:{placeholder:"请输入资源名称进行搜索",clearable:!0}},{component:"select",label:"同步方式",name:"eq_syncType",options:[{label:"不限",value:""},{label:"全量同步",value:"0"},{label:"增量同步",value:"1"}]},{component:"date-picker",label:"创建时间",name:"gt_createTime",attrs:{type:"datetimerange",rangeSeparator:"~",startPlaceholder:"开始日期",endPlaceholder:"结束日期"}},{component:"date-picker",label:"更新时间",name:"gt_syncTime",attrs:{type:"datetimerange",rangeSeparator:"~",startPlaceholder:"开始日期",endPlaceholder:"结束日期"}}],formatSearchParams:function(e){console.log("paramsCallBack",e);var t=e||{},n=t.systemManager,a=t.eq_status,l=t.name,r=t.otherParams;return{name:l||"",systemManager:n||"",eq_status:a||"",otherParams:r||""}},formatListData:function(e){var t=e.rows,n=e.total;return{list:t,total:n}},columnInfoList:[t("el-table-column",{attrs:{type:"index",label:"序号",width:"50"}}),{label:"数据库名称",prop:"name",formatter:function(e,t,n,a){return n+"增加的文字"}},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"特殊处理"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.dataSourceDialog=!0,e.dataSourceId=n.row.datasourceId}}},["$",n.row.format])])}}}])),{label:"数据库类型",prop:"type"},{label:"数据库描述",prop:"description"},{label:"创建时间",prop:"createTime"},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"操作"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.getData(n.row)}}},["查看详情"])])}}}]))]}}},methods:{getData:function(e){console.log("getData",e),this.$refs.searchTable.getTable()},resetClick:function(){this.$refs.searchTable.handleResetClick()},cellClick:function(e){console.log("cellClick",e)},search:function(){this.$refs.searchTable.handleSearchClick({otherParams:"otherParams"})}}};return Object(s["a"])({render:e,staticRenderFns:t},a)}(),"element-demo2":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("search-table",{ref:"searchTable",attrs:{data:e.data},on:{"cell-click":e.cellClick},scopedSlots:e._u([{key:"header",fn:function(){return[n("el-header",{staticClass:"flex",staticStyle:{background:"#EFF7FF"}},[e._v("Header")])]},proxy:!0},{key:"aside",fn:function(){return[n("el-aside",{staticClass:"flex",staticStyle:{background:"rgb(231, 244, 234)"},attrs:{width:"260px"}},[e._v("\n        Aside\n      ")])]},proxy:!0}])})]],2)},t=[],n=function(e){return new Promise((function(t,n){console.log("接口参数",e),setTimeout((function(){t({rows:[{name:"张三",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"李四",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"王五",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"赵六",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500}],total:100})}),500)}))},a={data:function(){var e=this,t=this.$createElement;return{data:{fetch:n,searchMenu:[{label:"资源名称",keyup:!0,name:"like_tableName",attrs:{placeholder:"请输入资源名称进行搜索",clearable:!0}},{label:"资源描述",keyup:!0,name:"like_tableDesc",attrs:{placeholder:"请输入资源名称进行搜索",clearable:!0}},{component:"select",label:"调度周期",name:"eq_scheduleCycle",options:[],url:"dl.database.table.scheduleCycleType"},{component:"select",label:"同步方式",name:"eq_syncType",options:[{label:"不限",value:""},{label:"全量同步",value:"0"},{label:"增量同步",value:"1"}]},{component:"date-picker",label:"创建时间",name:"gt_createTime",attrs:{type:"datetimerange",rangeSeparator:"~",startPlaceholder:"开始日期",endPlaceholder:"结束日期"}},{component:"date-picker",label:"更新时间",name:"gt_syncTime",attrs:{type:"datetimerange",rangeSeparator:"~",startPlaceholder:"开始日期",endPlaceholder:"结束日期"}}],formatSearchParams:function(e){console.log("paramsCallBack",e);var t=e||{},n=t.systemManager,a=t.eq_status,l=t.name,r=t.otherParams;return{name:l||"",systemManager:n||"",eq_status:a||"",otherParams:r||""}},formatListData:function(e){var t=e.rows,n=e.total;return{list:t,total:n}},columnInfoList:[t("el-table-column",{attrs:{type:"index",label:"序号",width:"50"}}),{label:"数据库名称",prop:"name",formatter:function(e,t,n,a){return n+"增加的文字"}},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"特殊处理"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.dataSourceDialog=!0,e.dataSourceId=n.row.datasourceId}}},["$",n.row.format])])}}}])),{label:"数据库类型",prop:"type"},{label:"数据库描述",prop:"description"},{label:"创建时间",prop:"createTime"},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"操作"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.getData(n.row)}}},["查看详情"])])}}}]))]}}},methods:{getData:function(e){console.log("getData",e),this.$refs.searchTable.getTable()},resetClick:function(){this.$refs.searchTable.handleResetClick()},cellClick:function(e){console.log("cellClick",e)},search:function(){this.$refs.searchTable.handleSearchClick({otherParams:"otherParams"})}}};return Object(s["a"])({render:e,staticRenderFns:t},a)}(),"element-demo3":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("search-table",{ref:"searchTable",attrs:{data:e.data},on:{"cell-click":e.cellClick},scopedSlots:e._u([{key:"header",fn:function(){return[n("el-header",[n("el-button",{on:{click:e.getData}},[e._v("getTable 记录当前查询参数")]),e._v(" "),n("el-button",{on:{click:e.resetClick}},[e._v("ResetClick 初始化查询参数（可接受额外参数）")]),e._v(" "),n("el-button",{on:{click:e.search}},[e._v("search: 初始化页数,记录当前查询参数（可接受额外参数）")])],1)]},proxy:!0}])})]],2)},t=[],n=function(e){return new Promise((function(t,n){console.log("接口参数",e),setTimeout((function(){t({rows:[{name:"张三",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"李四",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"王五",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500},{name:"赵六",type:"mongodb",description:"中国广东",createTime:"2018-10-10",format:500}],total:100})}),500)}))},a={data:function(){var e=this,t=this.$createElement;return{data:{fetch:n,searchMenu:[{label:"名称",keyup:!0,name:"name",attrs:{placeholder:"请输入名称进行搜索",maxlength:50,showWordLimit:!0}},{component:"select",label:"系统排序",name:"systemManager",options:[{label:"系统名称升序",value:"systemNameASC"},{label:"系统名称降序",value:"systemNameDESC"}]},{component:"select",label:"在用状态",name:"eq_status",options:[{label:"不限",value:""},{label:"正常",value:"1"},{label:"停用",value:"2"}]}],formatSearchParams:function(e){console.log("paramsCallBack",e);var t=e||{},n=t.systemManager,a=t.eq_status,l=t.name,r=t.otherParams;return{name:l||"",systemManager:n||"",eq_status:a||"",otherParams:r||""}},formatListData:function(e){var t=e.rows,n=e.total;return{list:t,total:n}},columnInfoList:[t("el-table-column",{attrs:{type:"index",label:"序号",width:"50"}}),{label:"数据库名称",prop:"name",formatter:function(e,t,n,a){return n+"增加的文字"}},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"特殊处理"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.dataSourceDialog=!0,e.dataSourceId=n.row.datasourceId}}},["$",n.row.format])])}}}])),{label:"数据库类型",prop:"type"},{label:"数据库描述",prop:"description"},{label:"创建时间",prop:"createTime"},t("el-table-column",o()([{style:"text-align: center;",attrs:{label:"操作"}},{scopedSlots:{default:function(n){return t("div",[t("el-button",{attrs:{type:"text",size:"small"},nativeOn:{click:function(){e.getData(n.row)}}},["查看详情"])])}}}]))]}}},methods:{getData:function(e){console.log("getData",e),this.$refs.searchTable.getTable()},resetClick:function(){this.$refs.searchTable.handleResetClick()},cellClick:function(e){console.log("cellClick",e)},search:function(){this.$refs.searchTable.handleSearchClick({otherParams:"otherParams"})}}};return Object(s["a"])({render:e,staticRenderFns:t},a)}()}},i=c,m=n("2877"),d=Object(m["a"])(i,a,l,!1,null,null,null);t["default"]=d.exports},6805:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[e._m(0),n("p",[e._v("常用于展示鼠标 hover 时的提示信息。")]),e._m(1),e._m(2),e._m(3),n("p",[e._v("根据父元素的宽度自动适应显示提示文字")]),n("demo-block",[n("div",[n("p",[e._v("跟el-tooltip不同的方法是elcontent内容会给展示到slot中,而slot中的内容不会展示")])]),n("template",{slot:"source"},[n("element-demo0")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n    <div>\n      <div style=\'width:80px;margin-bottom:16px;\'>\n        <nhc-tooltip class="item" effect="dark" content="Top 提示文字" placement="top" />\n      </div>\n\n      <div style=\'width:80px;\'>\n         <nhc-tooltip class="item" effect="dark" content="按钮不会显示" placement="top" >\n          <el-button>按钮不会显示</el-button>\n        </nhc-tooltip>\n      </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n}\n<\/script>\n')])])])],2),e._m(4),n("p",[e._v("根据父元素的宽度自动适应显示提示文字")]),n("demo-block",[n("div",[n("p",[e._v("跟el-tooltip不同的方法是elcontent内容会给展示到slot中,而slot中的内容不会展示")])]),n("template",{slot:"source"},[n("element-demo1")],1),n("template",{slot:"highlight"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n    <div>\n      <div style=\'width:80px;margin-bottom:16px;\'>\n        <nhc-tooltip class="item" effect="dark" content="Top 提示文字" placement="top" :open-click=\'true\' @click="handleClick(\'Top 提示文字\')" :disabled=\'true\'/>\n      </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n  methods: {\n    handleClick (str) {\n      alert(`点击了${str}`)\n    }\n  }\n}\n<\/script>\n')])])])],2),e._m(5),e._m(6),e._m(7),e._m(8)],1)},l=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h2",{attrs:{id:"nhctooltip-wen-zi-ti-shi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nhctooltip-wen-zi-ti-shi"}},[e._v("¶")]),e._v(" NhcTooltip 文字提示")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"she-ji-yuan-ze"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#she-ji-yuan-ze"}},[e._v("¶")]),e._v(" 设计原则")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("基于el-tooltip的基础上二次封装自动判断文字超出宽度时显示省略号,并带文字提示，没有超出宽度时，不带文字提示")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"ji-ben-yong-fa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ji-ben-yong-fa"}},[e._v("¶")]),e._v(" 基本用法")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"ke-dian-ji"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ke-dian-ji"}},[e._v("¶")]),e._v(" 可点击")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"attributes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#attributes"}},[e._v("¶")]),e._v(" Attributes")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("参数")]),n("th",[e._v("说明")]),n("th",[e._v("类型")]),n("th",[e._v("可选值")]),n("th",[e._v("默认值")])])]),n("tbody",[n("tr",[n("td",[e._v("content")]),n("td",[e._v("提示文字内容")]),n("td",[e._v("string")]),n("td",[e._v("—")]),n("td",[e._v("—")])]),n("tr",[n("td",[e._v("placement")]),n("td",[e._v("Tooltip 的出现位置")]),n("td",[e._v("string")]),n("td",[e._v("top/top-start/top-end/bottom/bottom-start/bottom-end/left/left-start/left-end/right/right-start/right-end")]),n("td",[e._v("top")])]),n("tr",[n("td",[e._v("openClick")]),n("td",[e._v("是否可以点击")]),n("td",[e._v("boolean")]),n("td",[e._v("—")]),n("td",[e._v("false")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("h3",{attrs:{id:"events"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("¶")]),e._v(" Events")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("事件名称")]),n("th",[e._v("说明")]),n("th",[e._v("回调参数")])])]),n("tbody",[n("tr",[n("td",[e._v("click")]),n("td",[e._v("openClick true状态下时回调")]),n("td",[e._v("—")])])])])}],r=n("5530"),o={name:"component-doc",components:{"element-demo0":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("div",[n("div",{staticStyle:{width:"80px","margin-bottom":"16px"}},[n("nhc-tooltip",{staticClass:"item",attrs:{effect:"dark",content:"Top 提示文字",placement:"top"}})],1),e._v(" "),n("div",{staticStyle:{width:"80px"}},[n("nhc-tooltip",{staticClass:"item",attrs:{effect:"dark",content:"按钮不会显示",placement:"top"}},[n("el-button",[e._v("按钮不会显示")])],1)],1)])]],2)},t=[],n={};return Object(r["a"])({render:e,staticRenderFns:t},n)}(),"element-demo1":function(){var e=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("div",[n("div",{staticStyle:{width:"80px","margin-bottom":"16px"}},[n("nhc-tooltip",{staticClass:"item",attrs:{effect:"dark",content:"Top 提示文字",placement:"top","open-click":!0,disabled:!0},on:{click:function(t){return e.handleClick("Top 提示文字")}}})],1)])]],2)},t=[],n={methods:{handleClick:function(e){alert("点击了".concat(e))}}};return Object(r["a"])({render:e,staticRenderFns:t},n)}()}},s=o,c=n("2877"),i=Object(c["a"])(s,a,l,!1,null,null,null);t["default"]=i.exports},7426:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"})},l=[],r=n("2877"),o={},s=Object(r["a"])(o,a,l,!1,null,null,null);t["default"]=s.exports},"841c":function(e,t,n){"use strict";var a=n("d784"),l=n("825a"),r=n("1d80"),o=n("129f"),s=n("14c3");a("search",1,(function(e,t,n){return[function(t){var n=r(this),a=void 0==t?void 0:t[e];return void 0!==a?a.call(t,n):new RegExp(t)[e](String(n))},function(e){var a=n(t,e,this);if(a.done)return a.value;var r=l(e),c=String(this),i=r.lastIndex;o(i,0)||(r.lastIndex=0);var m=s(r,c);return o(r.lastIndex,i)||(r.lastIndex=i),null===m?-1:m.index}]}))},b386:function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},l=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content element-doc"},[n("h2",{attrs:{id:"an-zhuang"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#an-zhuang"}},[e._v("¶")]),e._v(" 安装")]),n("p",[e._v("nhc-common-ui基于element-ui，所以需先引入element-ui")]),n("h3",{attrs:{id:"yarn-an-zhuang"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yarn-an-zhuang"}},[e._v("¶")]),e._v(" yarn 安装")]),n("pre",[n("code",{staticClass:"language-shell"},[e._v("yarn add nhc-common-ui -S --registry https://nexus.alltosea.com/repository/nhc-npm-group/\n")])]),n("h3",{attrs:{id:"npm-an-zhuang"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm-an-zhuang"}},[e._v("¶")]),e._v(" npm 安装")]),n("pre",[n("code",{staticClass:"language-shell"},[e._v("npm i nhc-common-ui -S --registry https://nexus.alltosea.com/repository/nhc-npm-group/\n")])]),n("h3",{attrs:{id:"yin-ru"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yin-ru"}},[e._v("¶")]),e._v(" 引入")]),n("pre",[n("code",{staticClass:"language-shell"},[e._v("import ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\n\nimport nhcCommon from 'nhc-common-ui'\nimport 'nhc-common-ui/lib/nhc-common-ui.css'\n")])])])}],r=n("2877"),o={},s=Object(r["a"])(o,a,l,!1,null,null,null);t["default"]=s.exports},f2f6:function(e,t,n){var a={"./AutoTable.md":"5ee5","./Installation.md":"b386","./NhcPagination.md":"1b34","./NhcSearch.md":"3599","./NhcTable.md":"7426","./NhcTooltip.md":"6805","./SearchTable.md":"4373","./doc-example.md":"ffe8"};function l(e){var t=r(e);return n(t)}function r(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}l.keys=function(){return Object.keys(a)},l.resolve=r,e.exports=l,l.id="f2f6"}}]);